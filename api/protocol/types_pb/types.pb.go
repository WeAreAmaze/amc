// Copyright 2022 The AmazeChain Authors
// This file is part of the AmazeChain library.
//
// The AmazeChain library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The AmazeChain library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the AmazeChain library. If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.0
// source: types.proto

package types_pb

import (
	_ "github.com/amazechain/amc/api/protocol/ext"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type H128 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi uint64 `protobuf:"varint,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo uint64 `protobuf:"varint,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H128) Reset() {
	*x = H128{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H128) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H128) ProtoMessage() {}

func (x *H128) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H128.ProtoReflect.Descriptor instead.
func (*H128) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{0}
}

func (x *H128) GetHi() uint64 {
	if x != nil {
		return x.Hi
	}
	return 0
}

func (x *H128) GetLo() uint64 {
	if x != nil {
		return x.Lo
	}
	return 0
}

type H160 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi *H128  `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo uint32 `protobuf:"varint,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H160) Reset() {
	*x = H160{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H160) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H160) ProtoMessage() {}

func (x *H160) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H160.ProtoReflect.Descriptor instead.
func (*H160) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{1}
}

func (x *H160) GetHi() *H128 {
	if x != nil {
		return x.Hi
	}
	return nil
}

func (x *H160) GetLo() uint32 {
	if x != nil {
		return x.Lo
	}
	return 0
}

type H256 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi *H128 `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo *H128 `protobuf:"bytes,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H256) Reset() {
	*x = H256{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H256) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H256) ProtoMessage() {}

func (x *H256) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H256.ProtoReflect.Descriptor instead.
func (*H256) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{2}
}

func (x *H256) GetHi() *H128 {
	if x != nil {
		return x.Hi
	}
	return nil
}

func (x *H256) GetLo() *H128 {
	if x != nil {
		return x.Lo
	}
	return nil
}

type H384 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi *H256 `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo *H128 `protobuf:"bytes,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H384) Reset() {
	*x = H384{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H384) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H384) ProtoMessage() {}

func (x *H384) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H384.ProtoReflect.Descriptor instead.
func (*H384) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{3}
}

func (x *H384) GetHi() *H256 {
	if x != nil {
		return x.Hi
	}
	return nil
}

func (x *H384) GetLo() *H128 {
	if x != nil {
		return x.Lo
	}
	return nil
}

type H768 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi *H384 `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo *H384 `protobuf:"bytes,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H768) Reset() {
	*x = H768{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H768) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H768) ProtoMessage() {}

func (x *H768) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H768.ProtoReflect.Descriptor instead.
func (*H768) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{4}
}

func (x *H768) GetHi() *H384 {
	if x != nil {
		return x.Hi
	}
	return nil
}

func (x *H768) GetLo() *H384 {
	if x != nil {
		return x.Lo
	}
	return nil
}

type H512 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi *H256 `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo *H256 `protobuf:"bytes,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H512) Reset() {
	*x = H512{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H512) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H512) ProtoMessage() {}

func (x *H512) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H512.ProtoReflect.Descriptor instead.
func (*H512) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{5}
}

func (x *H512) GetHi() *H256 {
	if x != nil {
		return x.Hi
	}
	return nil
}

func (x *H512) GetLo() *H256 {
	if x != nil {
		return x.Lo
	}
	return nil
}

type H1024 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi *H512 `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo *H512 `protobuf:"bytes,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H1024) Reset() {
	*x = H1024{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H1024) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H1024) ProtoMessage() {}

func (x *H1024) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H1024.ProtoReflect.Descriptor instead.
func (*H1024) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{6}
}

func (x *H1024) GetHi() *H512 {
	if x != nil {
		return x.Hi
	}
	return nil
}

func (x *H1024) GetLo() *H512 {
	if x != nil {
		return x.Lo
	}
	return nil
}

type H2048 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hi *H1024 `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	Lo *H1024 `protobuf:"bytes,2,opt,name=lo,proto3" json:"lo,omitempty"`
}

func (x *H2048) Reset() {
	*x = H2048{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H2048) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H2048) ProtoMessage() {}

func (x *H2048) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H2048.ProtoReflect.Descriptor instead.
func (*H2048) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{7}
}

func (x *H2048) GetHi() *H1024 {
	if x != nil {
		return x.Hi
	}
	return nil
}

func (x *H2048) GetLo() *H1024 {
	if x != nil {
		return x.Lo
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *Header `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Body   *Body   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{8}
}

func (x *Block) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash  *H256  `protobuf:"bytes,1,opt,name=ParentHash,proto3" json:"ParentHash,omitempty"`
	Coinbase    *H160  `protobuf:"bytes,2,opt,name=Coinbase,proto3" json:"Coinbase,omitempty"`
	Root        *H256  `protobuf:"bytes,3,opt,name=Root,proto3" json:"Root,omitempty"`
	TxHash      *H256  `protobuf:"bytes,4,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	ReceiptHash *H256  `protobuf:"bytes,5,opt,name=ReceiptHash,proto3" json:"ReceiptHash,omitempty"`
	Difficulty  *H256  `protobuf:"bytes,6,opt,name=Difficulty,proto3" json:"Difficulty,omitempty"`
	Number      *H256  `protobuf:"bytes,7,opt,name=Number,proto3" json:"Number,omitempty"`
	GasLimit    uint64 `protobuf:"varint,8,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasUsed     uint64 `protobuf:"varint,9,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	Time        uint64 `protobuf:"varint,10,opt,name=Time,proto3" json:"Time,omitempty"`
	Nonce       uint64 `protobuf:"varint,11,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	BaseFee     *H256  `protobuf:"bytes,12,opt,name=BaseFee,proto3" json:"BaseFee,omitempty"`
	// 65+32 byte (clique)
	Extra     []byte `protobuf:"bytes,13,opt,name=Extra,proto3" json:"Extra,omitempty" ssz-max:"117"`
	Signature *H768  `protobuf:"bytes,14,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Bloom     *H2048 `protobuf:"bytes,15,opt,name=Bloom,proto3" json:"Bloom,omitempty"`
	MixDigest *H256  `protobuf:"bytes,16,opt,name=MixDigest,proto3" json:"MixDigest,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{9}
}

func (x *Header) GetParentHash() *H256 {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *Header) GetCoinbase() *H160 {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

func (x *Header) GetRoot() *H256 {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *Header) GetTxHash() *H256 {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Header) GetReceiptHash() *H256 {
	if x != nil {
		return x.ReceiptHash
	}
	return nil
}

func (x *Header) GetDifficulty() *H256 {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *Header) GetNumber() *H256 {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *Header) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *Header) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Header) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Header) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Header) GetBaseFee() *H256 {
	if x != nil {
		return x.BaseFee
	}
	return nil
}

func (x *Header) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *Header) GetSignature() *H768 {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Header) GetBloom() *H2048 {
	if x != nil {
		return x.Bloom
	}
	return nil
}

func (x *Header) GetMixDigest() *H256 {
	if x != nil {
		return x.MixDigest
	}
	return nil
}

type Verifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey *H384 `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Address   *H160 `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *Verifier) Reset() {
	*x = Verifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verifier) ProtoMessage() {}

func (x *Verifier) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verifier.ProtoReflect.Descriptor instead.
func (*Verifier) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{10}
}

func (x *Verifier) GetPublicKey() *H384 {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *Verifier) GetAddress() *H160 {
	if x != nil {
		return x.Address
	}
	return nil
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount  *H256 `protobuf:"bytes,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Address *H160 `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{11}
}

func (x *Reward) GetAmount() *H256 {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Reward) GetAddress() *H160 {
	if x != nil {
		return x.Address
	}
	return nil
}

type Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txs       []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty" ssz-max:"104857600"`
	Verifiers []*Verifier    `protobuf:"bytes,2,rep,name=verifiers,proto3" json:"verifiers,omitempty" ssz-max:"104857600"`
	Rewards   []*Reward      `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty" ssz-max:"104857600"`
}

func (x *Body) Reset() {
	*x = Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{12}
}

func (x *Body) GetTxs() []*Transaction {
	if x != nil {
		return x.Txs
	}
	return nil
}

func (x *Body) GetVerifiers() []*Verifier {
	if x != nil {
		return x.Verifiers
	}
	return nil
}

func (x *Body) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              uint64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Nonce             uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice          *H256  `protobuf:"bytes,3,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	Gas               uint64 `protobuf:"varint,4,opt,name=gas,proto3" json:"gas,omitempty"`
	FeePerGas         *H256  `protobuf:"bytes,5,opt,name=feePerGas,proto3" json:"feePerGas,omitempty"`
	PriorityFeePerGas *H256  `protobuf:"bytes,6,opt,name=priorityFeePerGas,proto3" json:"priorityFeePerGas,omitempty"`
	Value             *H256  `protobuf:"bytes,7,opt,name=value,proto3" json:"value,omitempty"`
	Data              []byte `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty" ssz-max:"104857600"`
	Sign              []byte `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign,omitempty" ssz-max:"104857600"`
	To                *H160  `protobuf:"bytes,10,opt,name=to,proto3" json:"to,omitempty"`
	From              *H160  `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`
	ChainID           uint64 `protobuf:"varint,12,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Hash              *H256  `protobuf:"bytes,13,opt,name=hash,proto3" json:"hash,omitempty"`
	R                 *H256  `protobuf:"bytes,14,opt,name=r,proto3" json:"r,omitempty"`
	S                 *H256  `protobuf:"bytes,15,opt,name=s,proto3" json:"s,omitempty"`
	V                 *H256  `protobuf:"bytes,16,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{13}
}

func (x *Transaction) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Transaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Transaction) GetGasPrice() *H256 {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *Transaction) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *Transaction) GetFeePerGas() *H256 {
	if x != nil {
		return x.FeePerGas
	}
	return nil
}

func (x *Transaction) GetPriorityFeePerGas() *H256 {
	if x != nil {
		return x.PriorityFeePerGas
	}
	return nil
}

func (x *Transaction) GetValue() *H256 {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Transaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *Transaction) GetTo() *H160 {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transaction) GetFrom() *H160 {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Transaction) GetChainID() uint64 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

func (x *Transaction) GetHash() *H256 {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Transaction) GetR() *H256 {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *Transaction) GetS() *H256 {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *Transaction) GetV() *H256 {
	if x != nil {
		return x.V
	}
	return nil
}

type Receipts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipts []*Receipt `protobuf:"bytes,1,rep,name=receipts,proto3" json:"receipts,omitempty"`
}

func (x *Receipts) Reset() {
	*x = Receipts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipts) ProtoMessage() {}

func (x *Receipts) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipts.ProtoReflect.Descriptor instead.
func (*Receipts) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{14}
}

func (x *Receipts) GetReceipts() []*Receipt {
	if x != nil {
		return x.Receipts
	}
	return nil
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              uint32 `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	PostState         []byte `protobuf:"bytes,2,opt,name=PostState,proto3" json:"PostState,omitempty"`
	Status            uint64 `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	CumulativeGasUsed uint64 `protobuf:"varint,4,opt,name=CumulativeGasUsed,proto3" json:"CumulativeGasUsed,omitempty"`
	Bloom             *H2048 `protobuf:"bytes,5,opt,name=Bloom,proto3" json:"Bloom,omitempty"`
	Logs              []*Log `protobuf:"bytes,6,rep,name=Logs,proto3" json:"Logs,omitempty"`
	TxHash            *H256  `protobuf:"bytes,7,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	ContractAddress   *H160  `protobuf:"bytes,8,opt,name=ContractAddress,proto3" json:"ContractAddress,omitempty"`
	GasUsed           uint64 `protobuf:"varint,9,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	BlockHash         *H256  `protobuf:"bytes,10,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	BlockNumber       *H256  `protobuf:"bytes,11,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	TransactionIndex  uint64 `protobuf:"varint,12,opt,name=TransactionIndex,proto3" json:"TransactionIndex,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{15}
}

func (x *Receipt) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Receipt) GetPostState() []byte {
	if x != nil {
		return x.PostState
	}
	return nil
}

func (x *Receipt) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Receipt) GetCumulativeGasUsed() uint64 {
	if x != nil {
		return x.CumulativeGasUsed
	}
	return 0
}

func (x *Receipt) GetBloom() *H2048 {
	if x != nil {
		return x.Bloom
	}
	return nil
}

func (x *Receipt) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Receipt) GetTxHash() *H256 {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Receipt) GetContractAddress() *H160 {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *Receipt) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Receipt) GetBlockHash() *H256 {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Receipt) GetBlockNumber() *H256 {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Receipt) GetTransactionIndex() uint64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *H160   `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	Topics      []*H256 `protobuf:"bytes,2,rep,name=Topics,proto3" json:"Topics,omitempty"`
	Data        []byte  `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	BlockNumber *H256   `protobuf:"bytes,4,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	TxHash      *H256   `protobuf:"bytes,5,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	TxIndex     uint64  `protobuf:"varint,6,opt,name=TxIndex,proto3" json:"TxIndex,omitempty"`
	BlockHash   *H256   `protobuf:"bytes,7,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	Index       uint64  `protobuf:"varint,8,opt,name=Index,proto3" json:"Index,omitempty"`
	Removed     bool    `protobuf:"varint,9,opt,name=Removed,proto3" json:"Removed,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{16}
}

func (x *Log) GetAddress() *H160 {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Log) GetTopics() []*H256 {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Log) GetBlockNumber() *H256 {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

func (x *Log) GetTxHash() *H256 {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Log) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *Log) GetBlockHash() *H256 {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Log) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Log) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

type Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*Log `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *Logs) Reset() {
	*x = Logs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{17}
}

func (x *Logs) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_types_proto protoreflect.FileDescriptor

var file_types_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x1a, 0x11, 0x65, 0x78, 0x74, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x04, 0x48, 0x31,
	0x32, 0x38, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x68, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x6c, 0x6f, 0x22, 0x36, 0x0a, 0x04, 0x48, 0x31, 0x36, 0x30, 0x12, 0x1e, 0x0a, 0x02, 0x68, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x31, 0x32, 0x38, 0x52, 0x02, 0x68, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6c, 0x6f, 0x22, 0x46, 0x0a, 0x04, 0x48, 0x32,
	0x35, 0x36, 0x12, 0x1e, 0x0a, 0x02, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x32, 0x38, 0x52, 0x02,
	0x68, 0x69, 0x12, 0x1e, 0x0a, 0x02, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x32, 0x38, 0x52, 0x02,
	0x6c, 0x6f, 0x22, 0x46, 0x0a, 0x04, 0x48, 0x33, 0x38, 0x34, 0x12, 0x1e, 0x0a, 0x02, 0x68, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x02, 0x68, 0x69, 0x12, 0x1e, 0x0a, 0x02, 0x6c, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x31, 0x32, 0x38, 0x52, 0x02, 0x6c, 0x6f, 0x22, 0x46, 0x0a, 0x04, 0x48, 0x37,
	0x36, 0x38, 0x12, 0x1e, 0x0a, 0x02, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x33, 0x38, 0x34, 0x52, 0x02,
	0x68, 0x69, 0x12, 0x1e, 0x0a, 0x02, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x33, 0x38, 0x34, 0x52, 0x02,
	0x6c, 0x6f, 0x22, 0x46, 0x0a, 0x04, 0x48, 0x35, 0x31, 0x32, 0x12, 0x1e, 0x0a, 0x02, 0x68, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x02, 0x68, 0x69, 0x12, 0x1e, 0x0a, 0x02, 0x6c, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x02, 0x6c, 0x6f, 0x22, 0x47, 0x0a, 0x05, 0x48, 0x31,
	0x30, 0x32, 0x34, 0x12, 0x1e, 0x0a, 0x02, 0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x35, 0x31, 0x32, 0x52,
	0x02, 0x68, 0x69, 0x12, 0x1e, 0x0a, 0x02, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x35, 0x31, 0x32, 0x52,
	0x02, 0x6c, 0x6f, 0x22, 0x49, 0x0a, 0x05, 0x48, 0x32, 0x30, 0x34, 0x38, 0x12, 0x1f, 0x0a, 0x02,
	0x68, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x30, 0x32, 0x34, 0x52, 0x02, 0x68, 0x69, 0x12, 0x1f, 0x0a,
	0x02, 0x6c, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x30, 0x32, 0x34, 0x52, 0x02, 0x6c, 0x6f, 0x22, 0x55,
	0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f,
	0x70, 0x62, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xe6, 0x04, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e,
	0x48, 0x32, 0x35, 0x36, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x2a, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31,
	0x36, 0x30, 0x52, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x52, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x04, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x26, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36,
	0x52, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x0b, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x0a, 0x44, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x0a,
	0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x06, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48,
	0x32, 0x35, 0x36, 0x52, 0x07, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x05,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0x92, 0xb5, 0x18,
	0x03, 0x31, 0x31, 0x37, 0x52, 0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x2c, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x37, 0x36, 0x38, 0x52, 0x09,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x42, 0x6c, 0x6f,
	0x6f, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x30, 0x34, 0x38, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x6f, 0x6d,
	0x12, 0x2c, 0x0a, 0x09, 0x4d, 0x69, 0x78, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48,
	0x32, 0x35, 0x36, 0x52, 0x09, 0x4d, 0x69, 0x78, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x62,
	0x0a, 0x08, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x09, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x33, 0x38, 0x34, 0x52, 0x09, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x36, 0x30, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x5a, 0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x06,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62,
	0x2e, 0x48, 0x31, 0x36, 0x30, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xba,
	0x01, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x36, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x92, 0xb5, 0x18,
	0x09, 0x31, 0x30, 0x34, 0x38, 0x35, 0x37, 0x36, 0x30, 0x30, 0x52, 0x03, 0x74, 0x78, 0x73, 0x12,
	0x3f, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x0d, 0x92, 0xb5, 0x18, 0x09, 0x31, 0x30, 0x34, 0x38,
	0x35, 0x37, 0x36, 0x30, 0x30, 0x52, 0x09, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x42, 0x0d, 0x92, 0xb5, 0x18, 0x09, 0x31, 0x30, 0x34, 0x38, 0x35, 0x37, 0x36,
	0x30, 0x30, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0xa9, 0x04, 0x0a, 0x0b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f,
	0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x67, 0x61, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x09, 0x66, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61,
	0x73, 0x12, 0x3c, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65,
	0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x11, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x0d, 0x92, 0xb5, 0x18, 0x09, 0x31, 0x30, 0x34, 0x38, 0x35, 0x37, 0x36,
	0x30, 0x30, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0d, 0x92, 0xb5, 0x18, 0x09, 0x31, 0x30, 0x34, 0x38,
	0x35, 0x37, 0x36, 0x30, 0x30, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f,
	0x70, 0x62, 0x2e, 0x48, 0x31, 0x36, 0x30, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x36, 0x30, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f,
	0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a,
	0x01, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x01, 0x72, 0x12, 0x1c, 0x0a, 0x01, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70,
	0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x01, 0x73, 0x12, 0x1c, 0x0a, 0x01, 0x76, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e,
	0x48, 0x32, 0x35, 0x36, 0x52, 0x01, 0x76, 0x22, 0x39, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x73, 0x22, 0xd3, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x11, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x47,
	0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62,
	0x2e, 0x48, 0x32, 0x30, 0x34, 0x38, 0x52, 0x05, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x21, 0x0a,
	0x04, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36,
	0x52, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x38, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x36,
	0x30, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x09,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52,
	0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xbd, 0x02, 0x0a, 0x03, 0x4c, 0x6f, 0x67,
	0x12, 0x28, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x31, 0x36,
	0x30, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x06, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x0b, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x54, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x0a, 0x09, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x48, 0x32, 0x35, 0x36, 0x52, 0x09, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18,
	0x0a, 0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x29, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x21, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6d, 0x61, 0x7a, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x61, 0x6d, 0x63,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x5f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_types_proto_rawDescOnce sync.Once
	file_types_proto_rawDescData = file_types_proto_rawDesc
)

func file_types_proto_rawDescGZIP() []byte {
	file_types_proto_rawDescOnce.Do(func() {
		file_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_types_proto_rawDescData)
	})
	return file_types_proto_rawDescData
}

var file_types_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_types_proto_goTypes = []interface{}{
	(*H128)(nil),        // 0: types_pb.H128
	(*H160)(nil),        // 1: types_pb.H160
	(*H256)(nil),        // 2: types_pb.H256
	(*H384)(nil),        // 3: types_pb.H384
	(*H768)(nil),        // 4: types_pb.H768
	(*H512)(nil),        // 5: types_pb.H512
	(*H1024)(nil),       // 6: types_pb.H1024
	(*H2048)(nil),       // 7: types_pb.H2048
	(*Block)(nil),       // 8: types_pb.Block
	(*Header)(nil),      // 9: types_pb.Header
	(*Verifier)(nil),    // 10: types_pb.Verifier
	(*Reward)(nil),      // 11: types_pb.Reward
	(*Body)(nil),        // 12: types_pb.Body
	(*Transaction)(nil), // 13: types_pb.Transaction
	(*Receipts)(nil),    // 14: types_pb.Receipts
	(*Receipt)(nil),     // 15: types_pb.Receipt
	(*Log)(nil),         // 16: types_pb.Log
	(*Logs)(nil),        // 17: types_pb.Logs
}
var file_types_proto_depIdxs = []int32{
	0,  // 0: types_pb.H160.hi:type_name -> types_pb.H128
	0,  // 1: types_pb.H256.hi:type_name -> types_pb.H128
	0,  // 2: types_pb.H256.lo:type_name -> types_pb.H128
	2,  // 3: types_pb.H384.hi:type_name -> types_pb.H256
	0,  // 4: types_pb.H384.lo:type_name -> types_pb.H128
	3,  // 5: types_pb.H768.hi:type_name -> types_pb.H384
	3,  // 6: types_pb.H768.lo:type_name -> types_pb.H384
	2,  // 7: types_pb.H512.hi:type_name -> types_pb.H256
	2,  // 8: types_pb.H512.lo:type_name -> types_pb.H256
	5,  // 9: types_pb.H1024.hi:type_name -> types_pb.H512
	5,  // 10: types_pb.H1024.lo:type_name -> types_pb.H512
	6,  // 11: types_pb.H2048.hi:type_name -> types_pb.H1024
	6,  // 12: types_pb.H2048.lo:type_name -> types_pb.H1024
	9,  // 13: types_pb.Block.Header:type_name -> types_pb.Header
	12, // 14: types_pb.Block.body:type_name -> types_pb.Body
	2,  // 15: types_pb.Header.ParentHash:type_name -> types_pb.H256
	1,  // 16: types_pb.Header.Coinbase:type_name -> types_pb.H160
	2,  // 17: types_pb.Header.Root:type_name -> types_pb.H256
	2,  // 18: types_pb.Header.TxHash:type_name -> types_pb.H256
	2,  // 19: types_pb.Header.ReceiptHash:type_name -> types_pb.H256
	2,  // 20: types_pb.Header.Difficulty:type_name -> types_pb.H256
	2,  // 21: types_pb.Header.Number:type_name -> types_pb.H256
	2,  // 22: types_pb.Header.BaseFee:type_name -> types_pb.H256
	4,  // 23: types_pb.Header.Signature:type_name -> types_pb.H768
	7,  // 24: types_pb.Header.Bloom:type_name -> types_pb.H2048
	2,  // 25: types_pb.Header.MixDigest:type_name -> types_pb.H256
	3,  // 26: types_pb.Verifier.PublicKey:type_name -> types_pb.H384
	1,  // 27: types_pb.Verifier.Address:type_name -> types_pb.H160
	2,  // 28: types_pb.Reward.Amount:type_name -> types_pb.H256
	1,  // 29: types_pb.Reward.Address:type_name -> types_pb.H160
	13, // 30: types_pb.Body.txs:type_name -> types_pb.Transaction
	10, // 31: types_pb.Body.verifiers:type_name -> types_pb.Verifier
	11, // 32: types_pb.Body.rewards:type_name -> types_pb.Reward
	2,  // 33: types_pb.Transaction.gasPrice:type_name -> types_pb.H256
	2,  // 34: types_pb.Transaction.feePerGas:type_name -> types_pb.H256
	2,  // 35: types_pb.Transaction.priorityFeePerGas:type_name -> types_pb.H256
	2,  // 36: types_pb.Transaction.value:type_name -> types_pb.H256
	1,  // 37: types_pb.Transaction.to:type_name -> types_pb.H160
	1,  // 38: types_pb.Transaction.from:type_name -> types_pb.H160
	2,  // 39: types_pb.Transaction.hash:type_name -> types_pb.H256
	2,  // 40: types_pb.Transaction.r:type_name -> types_pb.H256
	2,  // 41: types_pb.Transaction.s:type_name -> types_pb.H256
	2,  // 42: types_pb.Transaction.v:type_name -> types_pb.H256
	15, // 43: types_pb.Receipts.receipts:type_name -> types_pb.Receipt
	7,  // 44: types_pb.Receipt.Bloom:type_name -> types_pb.H2048
	16, // 45: types_pb.Receipt.Logs:type_name -> types_pb.Log
	2,  // 46: types_pb.Receipt.TxHash:type_name -> types_pb.H256
	1,  // 47: types_pb.Receipt.ContractAddress:type_name -> types_pb.H160
	2,  // 48: types_pb.Receipt.BlockHash:type_name -> types_pb.H256
	2,  // 49: types_pb.Receipt.BlockNumber:type_name -> types_pb.H256
	1,  // 50: types_pb.Log.Address:type_name -> types_pb.H160
	2,  // 51: types_pb.Log.Topics:type_name -> types_pb.H256
	2,  // 52: types_pb.Log.BlockNumber:type_name -> types_pb.H256
	2,  // 53: types_pb.Log.TxHash:type_name -> types_pb.H256
	2,  // 54: types_pb.Log.BlockHash:type_name -> types_pb.H256
	16, // 55: types_pb.Logs.logs:type_name -> types_pb.Log
	56, // [56:56] is the sub-list for method output_type
	56, // [56:56] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_types_proto_init() }
func file_types_proto_init() {
	if File_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H128); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H160); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H256); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H384); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H768); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H512); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H1024); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H2048); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_proto_goTypes,
		DependencyIndexes: file_types_proto_depIdxs,
		MessageInfos:      file_types_proto_msgTypes,
	}.Build()
	File_types_proto = out.File
	file_types_proto_rawDesc = nil
	file_types_proto_goTypes = nil
	file_types_proto_depIdxs = nil
}
