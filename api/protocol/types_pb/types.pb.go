// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types.proto

package types_pb

import (
	fmt "fmt"
	github_com_amazechain_amc_common_types "github.com/amazechain/amc/common/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PBlock struct {
	Header               *PBHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Txs                  *PBody    `protobuf:"bytes,2,opt,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PBlock) Reset()         { *m = PBlock{} }
func (m *PBlock) String() string { return proto.CompactTextString(m) }
func (*PBlock) ProtoMessage()    {}
func (*PBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}
func (m *PBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBlock.Unmarshal(m, b)
}
func (m *PBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBlock.Marshal(b, m, deterministic)
}
func (m *PBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBlock.Merge(m, src)
}
func (m *PBlock) XXX_Size() int {
	return xxx_messageInfo_PBlock.Size(m)
}
func (m *PBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_PBlock.DiscardUnknown(m)
}

var xxx_messageInfo_PBlock proto.InternalMessageInfo

func (m *PBlock) GetHeader() *PBHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PBlock) GetTxs() *PBody {
	if m != nil {
		return m.Txs
	}
	return nil
}

type PBHeader struct {
	ParentHash           github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,1,opt,name=ParentHash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"ParentHash"`
	Coinbase             github_com_amazechain_amc_common_types.Address `protobuf:"bytes,2,opt,name=Coinbase,proto3,customtype=github.com/amazechain/amc/common/types.Address" json:"Coinbase"`
	Root                 github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,3,opt,name=Root,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"Root"`
	TxHash               github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,4,opt,name=TxHash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"TxHash"`
	ReceiptHash          github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,5,opt,name=ReceiptHash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"ReceiptHash"`
	Difficulty           github_com_amazechain_amc_common_types.Int256  `protobuf:"bytes,6,opt,name=Difficulty,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"Difficulty"`
	Number               github_com_amazechain_amc_common_types.Int256  `protobuf:"bytes,7,opt,name=Number,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"Number"`
	GasLimit             uint64                                         `protobuf:"varint,8,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	GasUsed              uint64                                         `protobuf:"varint,9,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	Time                 uint64                                         `protobuf:"varint,10,opt,name=Time,proto3" json:"Time,omitempty"`
	Nonce                uint64                                         `protobuf:"varint,11,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	BaseFee              github_com_amazechain_amc_common_types.Int256  `protobuf:"bytes,12,opt,name=BaseFee,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"BaseFee"`
	Extra                []byte                                         `protobuf:"bytes,13,opt,name=Extra,proto3" json:"Extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *PBHeader) Reset()         { *m = PBHeader{} }
func (m *PBHeader) String() string { return proto.CompactTextString(m) }
func (*PBHeader) ProtoMessage()    {}
func (*PBHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}
func (m *PBHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBHeader.Unmarshal(m, b)
}
func (m *PBHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBHeader.Marshal(b, m, deterministic)
}
func (m *PBHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBHeader.Merge(m, src)
}
func (m *PBHeader) XXX_Size() int {
	return xxx_messageInfo_PBHeader.Size(m)
}
func (m *PBHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PBHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PBHeader proto.InternalMessageInfo

func (m *PBHeader) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *PBHeader) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func (m *PBHeader) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *PBHeader) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *PBHeader) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

type PBody struct {
	Txs                  []*Transaction `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PBody) Reset()         { *m = PBody{} }
func (m *PBody) String() string { return proto.CompactTextString(m) }
func (*PBody) ProtoMessage()    {}
func (*PBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}
func (m *PBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBody.Unmarshal(m, b)
}
func (m *PBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBody.Marshal(b, m, deterministic)
}
func (m *PBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBody.Merge(m, src)
}
func (m *PBody) XXX_Size() int {
	return xxx_messageInfo_PBody.Size(m)
}
func (m *PBody) XXX_DiscardUnknown() {
	xxx_messageInfo_PBody.DiscardUnknown(m)
}

var xxx_messageInfo_PBody proto.InternalMessageInfo

func (m *PBody) GetTxs() []*Transaction {
	if m != nil {
		return m.Txs
	}
	return nil
}

type Transaction struct {
	//  option (gogoproto.goproto_getters) = false;
	Type                 uint64                                          `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Nonce                uint64                                          `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice             github_com_amazechain_amc_common_types.Int256   `protobuf:"bytes,3,opt,name=gasPrice,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"gasPrice"`
	Gas                  uint64                                          `protobuf:"varint,4,opt,name=gas,proto3" json:"gas,omitempty"`
	FeePerGas            github_com_amazechain_amc_common_types.Int256   `protobuf:"bytes,5,opt,name=feePerGas,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"feePerGas"`
	PriorityFeePerGas    github_com_amazechain_amc_common_types.Int256   `protobuf:"bytes,6,opt,name=priorityFeePerGas,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"priorityFeePerGas"`
	Value                github_com_amazechain_amc_common_types.Int256   `protobuf:"bytes,7,opt,name=value,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"value"`
	Data                 []byte                                          `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	Sing                 []byte                                          `protobuf:"bytes,9,opt,name=sing,proto3" json:"sing,omitempty"`
	To                   *github_com_amazechain_amc_common_types.Address `protobuf:"bytes,10,opt,name=to,proto3,customtype=github.com/amazechain/amc/common/types.Address" json:"to,omitempty"`
	From                 github_com_amazechain_amc_common_types.Address  `protobuf:"bytes,11,opt,name=from,proto3,customtype=github.com/amazechain/amc/common/types.Address" json:"from"`
	ChainID              uint64                                          `protobuf:"varint,12,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Hash                 github_com_amazechain_amc_common_types.Hash     `protobuf:"bytes,13,opt,name=hash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"hash"`
	R                    github_com_amazechain_amc_common_types.Int256   `protobuf:"bytes,14,opt,name=r,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"r"`
	S                    github_com_amazechain_amc_common_types.Int256   `protobuf:"bytes,15,opt,name=s,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"s"`
	V                    github_com_amazechain_amc_common_types.Int256   `protobuf:"bytes,16,opt,name=v,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"v"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetType() uint64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Transaction) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetGas() uint64 {
	if m != nil {
		return m.Gas
	}
	return 0
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Transaction) GetSing() []byte {
	if m != nil {
		return m.Sing
	}
	return nil
}

func (m *Transaction) GetChainID() uint64 {
	if m != nil {
		return m.ChainID
	}
	return 0
}

type Receipts struct {
	Receipts             []*Receipt `protobuf:"bytes,1,rep,name=receipts,proto3" json:"receipts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Receipts) Reset()         { *m = Receipts{} }
func (m *Receipts) String() string { return proto.CompactTextString(m) }
func (*Receipts) ProtoMessage()    {}
func (*Receipts) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}
func (m *Receipts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receipts.Unmarshal(m, b)
}
func (m *Receipts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receipts.Marshal(b, m, deterministic)
}
func (m *Receipts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receipts.Merge(m, src)
}
func (m *Receipts) XXX_Size() int {
	return xxx_messageInfo_Receipts.Size(m)
}
func (m *Receipts) XXX_DiscardUnknown() {
	xxx_messageInfo_Receipts.DiscardUnknown(m)
}

var xxx_messageInfo_Receipts proto.InternalMessageInfo

func (m *Receipts) GetReceipts() []*Receipt {
	if m != nil {
		return m.Receipts
	}
	return nil
}

type Receipt struct {
	Type                 uint64                                         `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	PostState            []byte                                         `protobuf:"bytes,2,opt,name=PostState,proto3" json:"PostState,omitempty"`
	Status               uint64                                         `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	CumulativeGasUsed    uint64                                         `protobuf:"varint,4,opt,name=CumulativeGasUsed,proto3" json:"CumulativeGasUsed,omitempty"`
	Bloom                []byte                                         `protobuf:"bytes,5,opt,name=Bloom,proto3" json:"Bloom,omitempty"`
	Logs                 []*Log                                         `protobuf:"bytes,6,rep,name=Logs,proto3" json:"Logs,omitempty"`
	TxHash               github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,7,opt,name=TxHash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"TxHash"`
	ContractAddress      github_com_amazechain_amc_common_types.Address `protobuf:"bytes,8,opt,name=ContractAddress,proto3,customtype=github.com/amazechain/amc/common/types.Address" json:"ContractAddress"`
	GasUsed              uint64                                         `protobuf:"varint,9,opt,name=GasUsed,proto3" json:"GasUsed,omitempty"`
	BlockHash            github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,10,opt,name=BlockHash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"BlockHash"`
	BlockNumber          github_com_amazechain_amc_common_types.Int256  `protobuf:"bytes,11,opt,name=BlockNumber,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"BlockNumber"`
	TransactionIndex     uint64                                         `protobuf:"varint,12,opt,name=TransactionIndex,proto3" json:"TransactionIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *Receipt) Reset()         { *m = Receipt{} }
func (m *Receipt) String() string { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()    {}
func (*Receipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{5}
}
func (m *Receipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receipt.Unmarshal(m, b)
}
func (m *Receipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receipt.Marshal(b, m, deterministic)
}
func (m *Receipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receipt.Merge(m, src)
}
func (m *Receipt) XXX_Size() int {
	return xxx_messageInfo_Receipt.Size(m)
}
func (m *Receipt) XXX_DiscardUnknown() {
	xxx_messageInfo_Receipt.DiscardUnknown(m)
}

var xxx_messageInfo_Receipt proto.InternalMessageInfo

func (m *Receipt) GetType() uint64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Receipt) GetPostState() []byte {
	if m != nil {
		return m.PostState
	}
	return nil
}

func (m *Receipt) GetStatus() uint64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Receipt) GetCumulativeGasUsed() uint64 {
	if m != nil {
		return m.CumulativeGasUsed
	}
	return 0
}

func (m *Receipt) GetBloom() []byte {
	if m != nil {
		return m.Bloom
	}
	return nil
}

func (m *Receipt) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *Receipt) GetGasUsed() uint64 {
	if m != nil {
		return m.GasUsed
	}
	return 0
}

func (m *Receipt) GetTransactionIndex() uint64 {
	if m != nil {
		return m.TransactionIndex
	}
	return 0
}

type Log struct {
	Address              github_com_amazechain_amc_common_types.Address `protobuf:"bytes,1,opt,name=Address,proto3,customtype=github.com/amazechain/amc/common/types.Address" json:"Address"`
	Topics               []github_com_amazechain_amc_common_types.Hash  `protobuf:"bytes,2,rep,name=Topics,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"Topics"`
	Data                 []byte                                         `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	BlockNumber          github_com_amazechain_amc_common_types.Int256  `protobuf:"bytes,4,opt,name=BlockNumber,proto3,customtype=github.com/amazechain/amc/common/types.Int256" json:"BlockNumber"`
	TxHash               github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,5,opt,name=TxHash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"TxHash"`
	TxIndex              uint64                                         `protobuf:"varint,6,opt,name=TxIndex,proto3" json:"TxIndex,omitempty"`
	BlockHash            github_com_amazechain_amc_common_types.Hash    `protobuf:"bytes,7,opt,name=BlockHash,proto3,customtype=github.com/amazechain/amc/common/types.Hash" json:"BlockHash"`
	Index                uint64                                         `protobuf:"varint,8,opt,name=Index,proto3" json:"Index,omitempty"`
	Removed              bool                                           `protobuf:"varint,9,opt,name=Removed,proto3" json:"Removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{6}
}
func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Log) GetTxIndex() uint64 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *Log) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Log) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

func init() {
	proto.RegisterType((*PBlock)(nil), "types.pb.PBlock")
	proto.RegisterType((*PBHeader)(nil), "types.pb.PBHeader")
	proto.RegisterType((*PBody)(nil), "types.pb.PBody")
	proto.RegisterType((*Transaction)(nil), "types.pb.Transaction")
	proto.RegisterType((*Receipts)(nil), "types.pb.Receipts")
	proto.RegisterType((*Receipt)(nil), "types.pb.Receipt")
	proto.RegisterType((*Log)(nil), "types.pb.Log")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 905 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0xd1, 0x6e, 0xdb, 0x36,
	0x17, 0xc7, 0x3f, 0xc5, 0xb2, 0x24, 0x1f, 0x3b, 0x5f, 0x12, 0x22, 0x1b, 0x84, 0x62, 0x40, 0x53,
	0xdf, 0x2c, 0xe8, 0x56, 0x7b, 0x4b, 0xd1, 0x02, 0xbb, 0x9c, 0x93, 0x25, 0xcd, 0x9a, 0x75, 0x2e,
	0x93, 0xa0, 0xc0, 0x6e, 0x36, 0x5a, 0x66, 0x14, 0x62, 0x96, 0x68, 0x88, 0xb4, 0xe1, 0xec, 0x1d,
	0x76, 0xb1, 0xb7, 0xda, 0x33, 0x6c, 0x40, 0x5f, 0x64, 0x37, 0x03, 0x0f, 0x29, 0x5b, 0x6b, 0xb0,
	0xa1, 0x90, 0x7a, 0x77, 0xce, 0x21, 0xf5, 0xa3, 0x0e, 0xf9, 0x3f, 0x87, 0x84, 0xae, 0xbe, 0x9b,
	0x73, 0x35, 0x98, 0x17, 0x52, 0x4b, 0x12, 0x39, 0x67, 0xf2, 0x60, 0x3f, 0x95, 0xa9, 0xc4, 0xe0,
	0xd0, 0x58, 0x76, 0xbc, 0xff, 0x06, 0x82, 0xf1, 0x68, 0x26, 0x93, 0x9f, 0xc9, 0x63, 0x08, 0x5e,
	0x70, 0x36, 0xe5, 0x45, 0xec, 0x1d, 0x78, 0x87, 0xdd, 0x23, 0x32, 0x28, 0x3f, 0x1d, 0x8c, 0x47,
	0x76, 0x84, 0xba, 0x19, 0xe4, 0x11, 0xb4, 0xf4, 0x4a, 0xc5, 0x5b, 0x38, 0x71, 0xa7, 0x3a, 0x51,
	0x4e, 0xef, 0xa8, 0x19, 0xeb, 0xff, 0x1a, 0x40, 0x54, 0x7e, 0x47, 0x2e, 0x01, 0xc6, 0xac, 0xe0,
	0xb9, 0x7e, 0xc1, 0xd4, 0x2d, 0xf2, 0x7b, 0xa3, 0xa7, 0xbf, 0xbf, 0x7d, 0xf8, 0xbf, 0x3f, 0xde,
	0x3e, 0xfc, 0x2c, 0x15, 0xfa, 0x76, 0x31, 0x19, 0x24, 0x32, 0x1b, 0xb2, 0x8c, 0xfd, 0xc2, 0x93,
	0x5b, 0x26, 0xf2, 0x21, 0xcb, 0x92, 0x61, 0x22, 0xb3, 0x4c, 0xe6, 0x43, 0x8b, 0x37, 0x9f, 0xd2,
	0x0a, 0x86, 0x50, 0x88, 0x8e, 0xa5, 0xc8, 0x27, 0x4c, 0x71, 0xfc, 0x93, 0xde, 0xe8, 0xb9, 0x43,
	0x0e, 0xde, 0x13, 0xf9, 0xf5, 0x74, 0x5a, 0x70, 0xa5, 0xe8, 0x9a, 0x43, 0xce, 0xc0, 0xa7, 0x52,
	0xea, 0xb8, 0x55, 0xff, 0x17, 0x11, 0x40, 0x5e, 0x42, 0x70, 0xb5, 0xc2, 0x6c, 0xfd, 0xfa, 0x28,
	0x87, 0x20, 0xd7, 0xd0, 0xa5, 0x3c, 0xe1, 0x62, 0x6e, 0xf7, 0xaf, 0x5d, 0x9f, 0x58, 0xe5, 0x90,
	0x6b, 0x80, 0x13, 0x71, 0x73, 0x23, 0x92, 0xc5, 0x4c, 0xdf, 0xc5, 0xc1, 0x81, 0x77, 0xd8, 0x19,
	0x3d, 0x73, 0xd4, 0x27, 0xef, 0x49, 0x3d, 0xcf, 0xf5, 0xd1, 0xb3, 0xe7, 0xb4, 0x02, 0x22, 0xdf,
	0x41, 0xf0, 0x6a, 0x91, 0x4d, 0x78, 0x11, 0x87, 0x4d, 0x90, 0x0e, 0x42, 0x1e, 0x40, 0x74, 0xc6,
	0xd4, 0x85, 0xc8, 0x84, 0x8e, 0xa3, 0x03, 0xef, 0xd0, 0xa7, 0x6b, 0x9f, 0xc4, 0x10, 0x9e, 0x31,
	0x75, 0xad, 0xf8, 0x34, 0xee, 0xe0, 0x50, 0xe9, 0x12, 0x02, 0xfe, 0x95, 0xc8, 0x78, 0x0c, 0x18,
	0x46, 0x9b, 0xec, 0x43, 0xfb, 0x95, 0xcc, 0x13, 0x1e, 0x77, 0x31, 0x68, 0x1d, 0xf2, 0x3d, 0x84,
	0x23, 0xa6, 0xf8, 0x29, 0xe7, 0x71, 0xaf, 0xc9, 0xff, 0x96, 0x14, 0xb3, 0xcc, 0x37, 0x2b, 0x5d,
	0xb0, 0x78, 0xdb, 0x9c, 0x13, 0xb5, 0x4e, 0xff, 0x0b, 0x68, 0x63, 0x75, 0x90, 0x4f, 0x6d, 0xed,
	0x78, 0x07, 0xad, 0xc3, 0xee, 0xd1, 0x47, 0x9b, 0xda, 0xb9, 0x2a, 0x58, 0xae, 0x58, 0xa2, 0x85,
	0xcc, 0x6d, 0x05, 0xfd, 0x16, 0x42, 0xb7, 0x12, 0x34, 0x29, 0x99, 0xc9, 0x58, 0x3e, 0x3e, 0x45,
	0xdb, 0xac, 0x95, 0x63, 0x4a, 0x5b, 0x36, 0x25, 0x74, 0xc8, 0x6b, 0x88, 0x52, 0xa6, 0xc6, 0x85,
	0x48, 0x38, 0x2a, 0xb9, 0x76, 0x4e, 0x6b, 0x0c, 0xd9, 0x85, 0x56, 0xca, 0x14, 0x8a, 0xd9, 0xa7,
	0xc6, 0x24, 0x97, 0xd0, 0xb9, 0xe1, 0x7c, 0xcc, 0x8b, 0x33, 0xa6, 0x50, 0x92, 0xb5, 0x57, 0xd9,
	0x70, 0x48, 0x02, 0x7b, 0xf3, 0x42, 0xc8, 0x42, 0xe8, 0xbb, 0xd3, 0x35, 0xbc, 0x91, 0x32, 0xef,
	0xf3, 0xc8, 0x4b, 0x68, 0x2f, 0xd9, 0x6c, 0xc1, 0x9b, 0xe9, 0xd3, 0x32, 0xcc, 0xa9, 0x4c, 0x99,
	0x66, 0x28, 0xcd, 0x1e, 0x45, 0xdb, 0xc4, 0x94, 0xc8, 0x53, 0xd4, 0x64, 0x8f, 0xa2, 0x4d, 0x4e,
	0x61, 0x4b, 0x4b, 0x94, 0x63, 0x07, 0xfb, 0x94, 0x57, 0xa3, 0x4f, 0x6d, 0x69, 0x49, 0xbe, 0x05,
	0xff, 0xa6, 0x90, 0x19, 0x6a, 0xb8, 0x53, 0xbb, 0xe3, 0x21, 0xc3, 0x94, 0x0f, 0xce, 0x3b, 0x3f,
	0x41, 0xe9, 0xfb, 0xb4, 0x74, 0x4d, 0x1f, 0xbc, 0x35, 0xad, 0x66, 0xbb, 0x41, 0x1f, 0x34, 0x00,
	0x72, 0x0c, 0x5e, 0x11, 0xff, 0xbf, 0xc9, 0x3e, 0x7b, 0x85, 0x81, 0xa8, 0x78, 0xa7, 0x11, 0x44,
	0x19, 0xc8, 0x32, 0xde, 0x6d, 0x04, 0x59, 0xf6, 0xbf, 0x82, 0xc8, 0x75, 0x50, 0x45, 0x9e, 0x40,
	0x54, 0x38, 0xdb, 0x55, 0xf3, 0xde, 0xa6, 0x9a, 0xdd, 0x2c, 0xba, 0x9e, 0xd2, 0xff, 0xd3, 0x87,
	0xd0, 0x45, 0xb1, 0x3b, 0x55, 0x4a, 0xd9, 0xd8, 0xe4, 0x13, 0xe8, 0x8c, 0xa5, 0xd2, 0x97, 0x9a,
	0x69, 0x77, 0x9f, 0xd1, 0x4d, 0x80, 0x7c, 0x0c, 0x81, 0x31, 0x16, 0x0a, 0x0b, 0xda, 0xa7, 0xce,
	0x23, 0x9f, 0xc3, 0xde, 0xf1, 0x22, 0x5b, 0xcc, 0x98, 0x16, 0x4b, 0x5e, 0xf6, 0x42, 0x5b, 0xa5,
	0xf7, 0x07, 0x4c, 0xbb, 0x18, 0xcd, 0xa4, 0xcc, 0xec, 0x15, 0x42, 0xad, 0x43, 0x1e, 0x81, 0x7f,
	0x21, 0x53, 0x53, 0x67, 0x26, 0x89, 0xed, 0x4d, 0x12, 0x17, 0x32, 0xa5, 0x38, 0x54, 0xb9, 0xce,
	0xc2, 0xe6, 0xd7, 0xd9, 0x4f, 0xb0, 0x73, 0x2c, 0x73, 0x5d, 0xb0, 0x44, 0x3b, 0x3d, 0xda, 0xea,
	0xa9, 0xad, 0xe6, 0x77, 0x71, 0xff, 0x71, 0x2f, 0xbc, 0x86, 0x0e, 0x3e, 0x77, 0x30, 0x17, 0xa8,
	0x9f, 0xcb, 0x86, 0x42, 0xde, 0x40, 0x17, 0x1d, 0x77, 0xe9, 0x75, 0x9b, 0x48, 0xac, 0x4a, 0x22,
	0x8f, 0x61, 0xb7, 0xd2, 0xff, 0xcf, 0xf3, 0x29, 0x5f, 0xb9, 0x3a, 0xbd, 0x17, 0xef, 0xff, 0xd5,
	0x82, 0xd6, 0x85, 0x4c, 0xc9, 0x18, 0xc2, 0x72, 0x4f, 0xbd, 0x46, 0x7b, 0x5a, 0x62, 0xf0, 0xe8,
	0xe5, 0x5c, 0x24, 0xe6, 0xb9, 0xd7, 0xaa, 0x7f, 0xf4, 0x88, 0x30, 0xc2, 0x3f, 0x31, 0xdd, 0xb2,
	0x65, 0x3b, 0xa3, 0xb1, 0xdf, 0xdd, 0x3f, 0xff, 0x83, 0xed, 0xdf, 0x46, 0xb4, 0xed, 0xe6, 0xa2,
	0x8d, 0x21, 0xbc, 0x5a, 0xd9, 0x33, 0x08, 0xac, 0xa4, 0x9c, 0xfb, 0x4f, 0x49, 0x85, 0x1f, 0x44,
	0x52, 0xfb, 0xd0, 0xb6, 0x4b, 0xd9, 0x07, 0x8f, 0x75, 0xcc, 0x2f, 0x50, 0x9e, 0xc9, 0xa5, 0x53,
	0x75, 0x44, 0x4b, 0x77, 0xf4, 0xe5, 0x0f, 0xc3, 0x7f, 0x5f, 0x89, 0xcd, 0xc5, 0x10, 0x1f, 0xfb,
	0x89, 0x9c, 0xd9, 0xf5, 0x7e, 0x9c, 0x4f, 0x26, 0x01, 0x86, 0x9e, 0xfe, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0xf6, 0xff, 0x8b, 0x4a, 0x2e, 0x0c, 0x00, 0x00,
}
